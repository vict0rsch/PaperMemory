{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Simple & automated in-browser reference manager.","text":"<p> PaperMemory is designed to be a fast, automated and user-friendly in-browser reference manager, with tons of features to make your life easier.  </p> <ul> <li> <p> Parse papers you open automatically</p> <p>Papers are stored in your Memory automatically, without a click. You can then search them, tag them, take personal notes etc.</p> <p>See the main features and get PaperMemory from your browser's extension store ( Chrome /  Brave /  Firefox /  Edge):</p> <p> Getting started</p> </li> <li> <p> Match preprints to publications</p> <p>By querying SemanticScholar, DBLP and CrossRef, PaperMemory can discover the proper publication of Arxiv pre-prints.</p> <p> Preprint Matching</p> </li> <li> <p> You live in your browser? So do your papers</p> <p>Share papers to your favorite apps by copying:</p> <ul> <li>a  BibTex entry for  Overleaf</li> <li>a  Markdown link <code>[title](url)</code> link for  Github,  HackMD or  Notion</li> <li>a  HyperText link for  emails,  Google Docs,  Slack, etc.</li> </ul> <p> Memory buttons</p> </li> <li> <p> Discover code repositories</p> <p>Using the PapersWithCode API, PaperMemory will match code repositories with papers in your Memory.</p> <p> Code discovery</p> </li> <li> <p> Enhance ArXiv.org</p> <p>Display the actual pubication venue of published papers, a link to the code repository, copy the BibTex entry etc.</p> <p> Arxiv Enhancements</p> </li> <li> <p> Instantly copy <code>.bib</code>-compatible bibliography entries</p> <p>Export a paper's BibTex entry directly from the extension, or bulk export BibTex entries by paper tag. You can even use PaperMemory to update the ArXiv entries of a stand-alone <code>.bib</code> file.</p> <p> Bibliography tools</p> </li> <li> <p> Keyboard-driven</p> <p>Use the keyboard to navigate through your papers, search them, copy the data you need (like hyperlinks, BibTex entries, markdown links etc.)</p> <p> Keyboard navigation</p> </li> <li> <p> Highly customizable</p> <p>Change the theme to light or dark, control the default link copied to your clipboard, add links to SciRate / HuggingFace Papers / Ar5iv / ArxivSanity, trigger parsing manually, export / import papers etc.</p> <p> Configuration</p> </li> <li> <p> And many more features!</p> <p>Github Gist synchronization, regex-based automatic paper tagging, arbitrary website parsing to record Blog posts or dataset websites, etc.</p> <p> All features</p> </li> </ul>"},{"location":"#papermemory-automatically-records-and-organizes-the-papers-you-read-without-ever-leaving-your-browser","title":"PaperMemory automatically records and organizes the papers you read, without ever leaving your browser.","text":"<p> Get the extension</p>"},{"location":"about/","title":"About PaperMemory","text":"<p>PaperMemory is developped as a Free and Open Software by vict0rsch.</p> <p>Share ideas \ud83d\udca1 or bugs \ud83d\udc1b in issues and love with stars \u2b50\ufe0f \ud83d\ude03.</p>"},{"location":"about/#if-you-like-papermemory","title":"If you like PaperMemory","text":"<ul> <li>Share a nice word \u2764\ufe0f\u200d\ud83d\udd25</li> <li>Star \u2b50 the project</li> <li>Advocate for PaperMemory on social media  <code>#PaperMemory - @vict0rsch</code> and around you in your lab or team.</li> <li>Rate on the webstore  /  /  or </li> <li>\u2615 Buy me a coffe</li> </ul>"},{"location":"about/#if-you-want-to-help","title":"If you want to help","text":"<p>I'm always looking for feedback, beta-testers or help with the development ( /  / :simple-css3:). Do reach out @ <code>vsch [at] pm [dot] me</code> or in issues, there's often some low hanging fruit which need help with. Or contribute your own ideas in a  PR .</p>"},{"location":"about/#development","title":"Development","text":"<p>As much as possible, I try to avoid using external libraries. But I'll acknowledge:</p> <ul> <li>Tabler Icons</li> <li>Gulp</li> <li>Gifox</li> <li>Shottr</li> <li>Puppeteer</li> <li>Material for Mkdocs</li> </ul> <p>Fun fact: make pretty commits with <code>gitmopy</code></p> <p> </p>"},{"location":"configuration/","title":"Configuring PaperMemory","text":""},{"location":"configuration/#keyboard-shortcuts","title":"Keyboard Shortcuts","text":"<p>By default, and if they are not already attributed, the following keyboard shortcuts are available:</p> <p></p> <p>Replace Ctrl by Cmd on a Mac.</p> <ul> <li>Open the PaperMemory Popup<ul> <li> /  \u25b6\ufe0f Ctrl+Shift+E</li> <li> \u25b6\ufe0f Ctrl+Shift+M</li> </ul> </li> <li>Download PDF of current paper<ul> <li> /  /  \u25b6\ufe0f Ctrl+Shift+S</li> <li>If you have enabled this feature in the menu, the paper will be downloaded in your PaperMemoryStore (see thee below).</li> </ul> </li> <li>Trigger paper parsing<ul> <li> /  /  \u25b6\ufe0f Ctrl+Shift+P</li> <li>Trigger the manual parsing of a paper if you have disabled automatic paper detection in the menu.</li> </ul> </li> <li>Execute the default action for the current paper<ul> <li> /  /  \u25b6\ufe0f Alt+Shift+E</li> <li>This will not work if the current page is not a paper's page or the current action is not available for this paper (e.g. trying to open the AlphaXiv page of a non-Arxiv paper).</li> </ul> </li> </ul> <p>Customization &amp; Issues</p> <p>All those shortcuts can be verified, changed or removed from <code>chrome://extensions/shortcuts</code> ( Chrome /  Brave /  Edge) or <code>about:addons</code> ( Firefox).</p>"},{"location":"configuration/#popup-menu","title":"Popup Menu","text":"<p>The following  items are displayed in PaperMemory's  Popup Menu and can be changed anytime (close and re-open popup to see changes).</p>"},{"location":"configuration/#arxiv-enhancements","title":"Arxiv enhancements","text":"<code>Add PDF direct download button</code> <p>Add the blue animated button to download the PDF to your Downloads without opening it.</p> <code>Add Markdown Link section</code> <p>In the right-most column on ArXiv.org, add the copy-able box with a  Markdown-ready link <code>[$title]($url)</code>.</p> <code>Add BibTex citation section</code> <p>In the right-most column on ArXiv.org, add the copy-able box with a   BibTex citation.</p>"},{"location":"configuration/#user-interface","title":"User interface","text":"<code>Display notification when a paper is added</code> <p>Enable/Disable the red sliding notification displayed by PaperMemory when a Paper is parsed or a new code repository is found.</p> <code>Use Dark Mode</code> <p>Choose between light and dark mode for the Popup, Advanced Options and BibMatcher.</p> <code>Directly open the Memory when not on a Paper's page</code> <p>This feature assumes that your primary reason to open PaperMemory -- when you're not on a paper's page -- is to look for a paper in your Memory and therefore directly opens it without you cliking on the  button or pressing A.</p> <code>Change paper tab titles</code> <p>By default, PaperMemory will replace your browser's tab titles with the paper's title so they are more easily searched and bookmarked.</p> <code>Add a link to SciRate in the popup</code> <p>Add a   icon to your papers to open directly on SciRate.</p> <code>Add a link to AlphaXiv in the popup</code> <p>Add a  icon to your papers to open directly on AlphaXiv.</p> <code>Add a link to ar5iv in the popup</code> <p>Add a   icon to your papers to open directly on ar5iv.</p> <code>Add a link to the HuggingFace paper page in the popup (Arxiv only)</code> <p>Add a   icon to your papers to open directly on HuggingFace Papers.</p>"},{"location":"configuration/#functionalities","title":"Functionalities","text":"<code>Include a paper's venue and year when available in the Markdown link</code> <p>Choose between <code>[$title]($url)</code> and <code>[$title -- $venue ($year)]($url)</code> when creating the  Markdown links for a paper (only if a venue is known).</p> <code>Favor PDFs for paper links (otherwise, links will point to a paper's abstract page)</code> <p>Whenever a link is involved (,  ,  etc.) prefer linking to the online PDF (if known) over the default HTML/Abstract page.</p> <code>Only record papers on their pdf pages, not from their abstracts</code> <p>Prevent PaperMemory from recording all papers, but only those of which you open the PDF.</p> <code>Disable automatic recording of papers. You will have to manually open the popup and click a button</code> <p>Prevent PaperMemory from recording any paper, you will have to trigger the parsing from the Popup or the Keyboard Shortcut.</p> <code>When hitting Enter on a memory item, open a local PDF file when one is available instead of the the link to the paper.</code> <p>Choose to open the local PDF file you have in your <code>Downloads/</code> (if any) instead of opening the online version of the PDF, when pressing Enter on a paper in your Memory.</p> <code>Download pdfs to PaperMemory's folder in your Downloads to be able to open them instead of re-downloading.</code> <p>Enable the <code>PaperMemoryStore/</code> folder in your <code>Downloads/</code> to enable PaperMemory to handle local files instead of re-downloading online PDFs every time.</p> <code>Enable parsing of arbitrary website by adding a button in the popup.</code> <p>Adds the <code>Parse Current Website</code> button when on an unknown web page (i.e. not detected as a paper provider) to record arbitrary web pages to your Memory.</p>"},{"location":"configuration/#keyboard-default-action","title":"Keyboard Default Action","text":"<p>Whenever you focus a paper in your memory (through Tab or click), its border will be highlighted. This means you can now use the keyboard shortcuts described in the Keyboard Navigation section.</p> <p>From the Menu, you can also define a default keyboard shortcut to execute when typing Enter on a paper.</p>"},{"location":"configuration/#advanced-options","title":"Advanced Options","text":"<p>More customization options and features are available in the Advanced Options page:</p> <ul> <li>Right click on the extension's button in your browser toolbar and select Options</li> <li>Open the  Popup Menu, scroll down and click on Options page.</li> <li>Paste one of those URLs in your address bar     <pre><code># Chrome / Brave / Edge:\nchrome-extension://ehchlpggdaffcncbeopdopnndhdjelbc/src/options/options.html\n# Firefox:\nmoz-extension://05b6ef8a-7314-4c1d-a519-80f48a5794a6/src/options/options.html\n</code></pre></li> </ul> <code>PapersWithCode preferences</code> <p>Choose whether or not you enable unofficial repositories and if you have a preferred (Tensorflow / PyTorch) Deep Learning framework.</p> <code>Auto-tagging</code> <p>Define a list of regexs to apply to <code>title</code> and <code>author</code> fields to automatically tag papers in your Memory.</p> <code>Preprint matching</code> <p>Trigger the preprint-matching process for your current memory: this will search for published versions of your ArXiv preprints. PaperMemory will continuously look for publications when you visit a preprint's ArXiv page, but this feature bulks the process for all preprints in your memory.</p> <code>Select Sources</code> <p>Select the paper sources you want PaperMemory to parse papers from.</p> <code>Data Management</code> <p>Manage your data:</p> <ul> <li>export your memory as <code>.bib</code> or <code>.json</code> files</li> <li>import an existing <code>.json</code> memory you have backed-up</li> <li>export a bibliography by tag</li> <li>import a list of URLs into your memory.</li> </ul> <code>Online synchronization</code> <p>Enable Online Synchronization by providing a Github Personal Access Token.</p>"},{"location":"faq/","title":"FAQ","text":""},{"location":"faq/#why-does-papermemory-require-access-to-all-urls","title":"Why does PaperMemory require access to all urls?","text":"<p>Because Chrome &amp; Brave will disable an extension by default when it auto-updates with new permissions. In this case, any new addition of a paper source will require new permissions to access the data necessary to parse the paper data and will therefore disable the extension until users re-enable it.</p>"},{"location":"faq/#papermemory-is-not-parsing-pdfs-in-firefox","title":"PaperMemory is not parsing PDFs in Firefox","text":"<p>PaperMemory is not parsing PDFs in Firefox because Firefox does not treat PDFs as web pages and therefore does not execute PaperMemory automatically. You can still trigger PaperMemory manually by clicking on the extension's icon in the toolbar then the <code>Try manual trigger</code> button.</p> <p>More info here.</p>"},{"location":"faq/#the-button-to-go-from-an-abstract-to-its-pdf-does-not-work","title":"The button to go from an abstract to its pdf does not work","text":"<p>In general there can be 2 reasons:</p> <ol> <li>It's a bug, it can happen, I'm sorry about this: you should raise an issue, and ideally even provide a fix in a Pull Resquest</li> <li>More likely, the pdf is behind a paywall and the standard <code>abstract -&gt; pdf</code> path was redirected by the venue's website</li> </ol>"},{"location":"faq/#how-do-you-match-arxivorg-pre-prints-to-actual-publications","title":"How do you match Arxiv.org pre-prints to actual publications?","text":"<p>It's all there: preprints \ud83d\ude03</p> <p>Contributions and ideas on how to improve the process and potentially add publication sources from titles or arxiv <code>id</code> are welcome!</p>"},{"location":"faq/#where-does-papermemory-store-my-data","title":"Where does PaperMemory store my data?","text":"<p>It's all stored locally in your browser's local storage. If you want to transfer data to a new browser/computer, use the export/import tools in the extension's options.</p>"},{"location":"faq/#how-can-i-export-all-or-some-papers","title":"How can I export all or some papers?","text":"<p>Check out the Advanced Options's Data Management section, you can export:</p> <ul> <li>your full PaperMemory data as <code>.json</code> file</li> <li>your full bibliography as <code>.bib</code> file (or <code>.json</code>)</li> <li>papers based on the tags you'be assigned them as a <code>.bib</code> file</li> </ul>"},{"location":"faq/#can-i-reference-my-pdf-in-papermemory","title":"Can I reference my PDF in PaperMemory?","text":"<p>If you want to associate a PDF file to a paper in your PaperMemoryStore that is not downloaded from PaperMemory (for instance, it is behind a paywall), you can download it to <code>~/Downloads/PaperMemoryStore/</code> (maybe you're reading the paper on Sci-Hub you thief \ud83d\ude43) provided the file's name contains the paper's title (not counting non-alphanumeric characters and case-insensitive).</p> <p>Because of limitations Browser Extensions face, a file must be downloaded from the Browser to the folder in order to be detected. This means that if someone sends you a pdf over Slack or if you move a file to the PaperMemoryStore folder for instance, you won't be able to match it to a PaperMemory item.</p>"},{"location":"faq/#how-do-i-resolve-duplicates","title":"How do I resolve duplicates?","text":"<ul> <li>If you installed PaperMemory <code>&lt;0.5.3</code> (May 2022) you may have duplicate papers in your Memory. The easiest way to resolve this is to go to a duplicate's page, then delete it from memory and refresh the page. The automatic de-duplication features in version <code>0.5.3</code> should handle the matching if the 2 papers have the same title.</li> <li>If you still see duplicates with PaperMemory <code>&gt;=0.5.3</code> and the 2 papers have the same title, this may be a problem with PaperMemory and you should open an issue here on Github.</li> </ul>"},{"location":"faq/#can-i-access-the-memory-full-screen","title":"Can I access the memory full-screen?","text":"<p>Sure! In the extension popup's menu, there's a link at the bottom to the full-page memory. You can also just go to this url (Thanks @kaixin96!):</p> <pre><code># Copy-paste this url (Chrome / Brave / Edge):\nchrome-extension://ehchlpggdaffcncbeopdopnndhdjelbc/src/fullMemory/fullMemory.html\n# Firefox:\nmoz-extension://05b6ef8a-7314-4c1d-a519-80f48a5794a6/src/fullMemory/fullMemory.html\n</code></pre>"},{"location":"faq/#can-i-exclude-a-paper-source","title":"Can I exclude a paper source?","text":"<p>Yep. In the extension popup's advanced options page: right-click the extension's icon and click on <code>Options</code>. Or click on the link at the bottom of the  Popup Menu. Or go to this url (Thanks @kaixin96!):</p> <pre><code># Copy-paste this url (Chrome / Brave / Edge):\nchrome-extension://ehchlpggdaffcncbeopdopnndhdjelbc/src/options/options.html\n# Firefox:\nmoz-extension://05b6ef8a-7314-4c1d-a519-80f48a5794a6/src/options/options.html\n</code></pre>"},{"location":"faq/#are-there-data-backups","title":"Are there data backups?","text":"<p>In case there's a bad bug or you mess up when overwriting your memory, PaperMemory preforms weekly backups (locally as always), which you can retrieve with a little coding:</p> <ol> <li>Open the extension's options (either right clicking its icon, or from the extension's menu, at the bottom)</li> <li>On the options page, open the Javascript Console with <code>cmd/ctrl + alt + i</code> or <code>right click &gt; Inspect</code></li> <li>Do the following in the Javascript Console:</li> </ol> <pre><code>const backups = await getStorage(\"weeklyBackups\");\nconsole.log(Object.keys(backups)); // this shows you available backup dates\nconst overwrite = backups[\"&lt;some key from above&gt;\"];\nconsole.log(overwrite); // inspect this and make sure it is what you want\nsetStorage(\"papers\", overwrite); // Careful! This will overwrite the current data with the backup data\n</code></pre> <p>Note that if you uninstall PaperMemory all your data will be gone and the only way to keep track of what was in your Memory is to export it first (in the advanced options page).</p>"},{"location":"features/","title":"Features","text":""},{"location":"features/#user-guides","title":"User Guides","text":""},{"location":"features/#keyboard-navigation","title":"Keyboard Navigation","text":"<p>Navigate the Popup with your keyboard:</p> <ul> <li>Open the Memory:<ul> <li>A from the popup's home will open it</li> <li>navigate to the bottom left button with Tab and hit Enter</li> </ul> </li> <li>Search<ul> <li>Search field is automatically focused on memory open</li> <li>Navigate to the top input with Tab or Shift+Tab</li> <li>More info on the search syntax down in the Searching section</li> </ul> </li> <li>Navigate papers<ul> <li>Tab will iterate through papers down the list</li> <li>Shift+Tab will go back up the list</li> </ul> </li> <li>Edit a paper<ul> <li>Press E to edit the paper's metadata: tags, code and note when the paper is focused (from click or keyboard Tab navigation)</li> <li>Navigate through fields with (Shift +) Tab: tags and note if you're on a paper's page.</li> <li>Press Enter on the <code>Done</code> button to close the edits (they were already saved automatically)</li> </ul> </li> <li>Delete a paper<ul> <li>Delete a focused paper with backspace</li> <li>A confirmation will be prompted first don't worry</li> </ul> </li> <li>Copy shortcuts<ul> <li>O \u21a6 open the paper in a new tab.</li> <li>C \u21a6 copy the paper's link.</li> <li>M \u21a6 copy the paper's markdown link.</li> <li>B \u21a6 copy the paper's bibtex.</li> <li>H \u21a6 copy the paper's hyperlink.</li> <li>D \u21a6 show the paper's metadata.</li> </ul> </li> <li>Open ArXiv papers on alternative websites:<ul> <li>5 \u21a6 go to the paper's Ar5iv page</li> <li>X \u21a6 go to the paper's AlphaXiv page</li> <li>F \u21a6 go to the paper's HuggingFace page</li> <li>S \u21a6 go to the paper's SciRate page</li> </ul> </li> <li>Set a default action for the current paper in the Menu<ul> <li>When a paper is focused in the popup: Enter \u21a6 execute the default action for the current paper</li> <li>Without opening PaperMemory's popup: Alt+Shift+E \u21a6 execute the default action for the current paper</li> </ul> </li> <li>Close Memory, Menu, Modals (such as the user guide) or Popup - Esc closes items up until you're back to the popup, at which point it will close the popup. -  This does not work in Firefox. The whole popup will close at any point with Esc.</li> </ul> <p></p>"},{"location":"features/#arxiv-enhancements","title":"Arxiv Enhancements","text":"<p>PaperMemory enhances paper pages on ArXiv.org to make its parsing abilities readily available without even opening the popup:</p> <ul> <li>Displays the publication venue if one exists</li> <li>Allows you to directly download a paper to your PaperMemoryStore</li> </ul> <p></p> <p></p>"},{"location":"features/#memory-parsing-papers","title":"Memory: Parsing papers","text":""},{"location":"features/#venues","title":"Venues","text":"<p>In order to parse papers from the websites you visit, PaperMemory contains a custom function for each individual paper provider (ArXiv, ScienceDirect, OpenReview, Nature, Science, FrontiersIn, etc.).</p> <p>Whenever possible, PaperMemory queries the API the provider offers. If they don't offer an open and free API, PaperMemory will parse the page's <code>HTML</code> code. When on a PDF's page, PaperMemory contains an URL reversal process to go from PDF to Abstract page. If that cannot be infered from the URL because of the paper provider's URL scheme, there's nothing PaperMemory can do and the PDF will not be stored.(1)</p> <ol> <li>PDFs are notoriously hard to parse as stand-alone files, so PaperMemory cannot (currently) extract metadata from the raw file. This feature has a low priority and would require a PR to move forward.</li> </ol> PaperMemory known venues <ul> <li>Arxiv</li> <li>PaperMemory will try to find if a pre-print has been published and create a corresponding <code>note</code> to the paper (see preprints)</li> <li>Also detects and matches papers from huggingface.co/papers, AlphaXiv, ar5iv.org and scirate.com/</li> <li>BioRxiv</li> <li>NeurIPS</li> <li>Open Review (ICLR etc.)</li> <li>Computer Vision Foundation (I/ECCV, CVPR etc.)</li> <li>Proceedings of Machine Learning Research (PMLR) (AISTATS, ICML, CoRL, CoLT, ALT, UAI etc.)</li> <li>Association for Computational Linguistics (ACL) (EMNLP, ACL, CoNLL, NAACL etc.)</li> <li>Proceedings of the National Academy of Sciences (PNAS)</li> <li>SciRate</li> <li>Nature (Nature, Nature Communications, Nature Machine Intelligence etc.)</li> <li>American Chemical Society (ACS)</li> <li>IOPscience</li> <li>PubMed Central</li> <li>International Joint Conferences on Artificial Intelligence (IJCAI)</li> <li>Association for Computing Machinery (ACM)</li> <li>IEEE</li> <li>Springer (books, chapters and, of course, articles)</li> <li>American Physical Society (APS)</li> <li>Wiley (Advanced Materials, InfoMat etc.)</li> <li>Science Direct</li> <li>Science (Science, Science Immunology, Science Robotics etc.)</li> <li>FrontiersIn (Frontiers in Neuroscience, Frontiers in Neuroscience, Frontiers in Microbiology etc.)</li> <li>PLOS</li> <li>Royal Society of Chemistry</li> <li>MDPI</li> <li>Oxford University Press</li> <li>HAL Archives ouvertes</li> <li>Sci-Hub</li> <li>Add more</li> </ul> <p>About finding published papers from preprints</p>"},{"location":"features/#code-repositories","title":"Code repositories","text":"<p>PaperMemory uses Papers With Code's API to discover code repositories for your paper.</p> <p>By default, PaperMemory only stores official code repositories. You can configure that (and a preferred framework) in the Advanced Options.</p> How it works <p>PaperMemory uses the PapersWithCode API in order to discover code repositories. If the paper being added to the Memory is from Arxiv, PaperMemory will use PWC's <code>arxiv_id</code> search field. Otherwise it will query per title. PaperMemory then expects exactly <code>1</code> result from the API. Any different <code>count</code> in the response will make PaperMemory consider there is no match.</p> <p>If a match is found, the selected repo is the official (if it exists) one with the most stars (customizable in the Advanced Options).</p> <p>Here's an example return value from PWC's API</p> <pre><code>\"https://paperswithcode.com/api/v1/papers/?title=climategan\"\n\n{\n\"count\": 1,\n\"next\": null,\n\"previous\": null,\n\"results\": [\n    {\n    \"id\": \"climategan-raising-climate-change-awareness\",\n    \"arxiv_id\": \"2110.02871\",\n    \"nips_id\": null,\n    \"url_abs\": \"https://arxiv.org/abs/2110.02871v1\",\n    \"url_pdf\": \"https://arxiv.org/pdf/2110.02871v1.pdf\",\n    \"title\": \"ClimateGAN: Raising Climate Change Awareness by Generating Images of Floods\",\n    \"abstract\": \"...\",\n    \"authors\": [\"...\"],\n    \"published\": \"2021-10-06\",\n    \"conference\": \"climategan-raising-climate-change-awareness-1\",\n    \"conference_url_abs\": \"https://openreview.net/forum?id=EZNOb_uNpJk\",\n    \"conference_url_pdf\": \"https://openreview.net/pdf?id=EZNOb_uNpJk\",\n    \"proceeding\": \"iclr-2022-4\"\n    }\n]\n}\n\n\"https://paperswithcode.com/api/v1/papers/climategan-raising-climate-change-awareness/repositories/\"\n\n{\n\"count\": 2,\n\"next\": null,\n\"previous\": null,\n\"results\": [\n    {\n    \"url\": \"https://github.com/cc-ai/climategan\",\n    \"owner\": \"cc-ai\",\n    \"name\": \"climategan\",\n    \"description\": \"Code and pre-trained model for the algorithm generating visualisations of 3 climate change related events: floods, wildfires and smog. \",\n    \"stars\": 25,\n    \"framework\": \"pytorch\",\n    \"is_official\": true\n    },\n    {\n    \"url\": \"https://github.com/cc-ai/mila-simulated-floods\",\n    \"owner\": \"cc-ai\",\n    \"name\": \"mila-simulated-floods\",\n    \"description\": \"\",\n    \"stars\": 7,\n    \"framework\": \"pytorch\",\n    \"is_official\": true\n    }\n]\n}\n</code></pre>"},{"location":"features/#searching","title":"Searching","text":"<p>You can search for (partial) terms:</p> <ul> <li>In a paper's authors, title and note.<ul> <li>Split queries on spaces: <code>gan im</code> will look for: all papers whose (title OR author) contain (\"gan\" AND \"im\")</li> </ul> </li> <li>In a paper's code link<ul> <li>Start the search query with <code>c:</code> to only search code links</li> </ul> </li> <li>Paper years<ul> <li>Start the search query with <code>y: ${year}</code>, optionally with <code>,</code> separating requested years or starting with <code>&gt;</code> or <code>&lt;</code> to filter paper published after/before a given year (stricly)<ul> <li><code>y: 20,21,22</code> will display papers published in <code>2020 OR 2021 OR 2022</code></li> <li><code>y: &lt;2015</code> will display papers published before (strictly) <code>2015</code></li> <li><code>y: &gt;19</code> will display papers published after (strictly) <code>2019</code></li> </ul> </li> </ul> </li> <li>Paper tags<ul> <li>Start the search query with <code>t:</code> to filter by tags</li> <li><code>t: gan</code> will look for all papers whose tag-list contains at least 1 tag containing \"gan\"</li> <li><code>t: gan tim</code> will look for all papers whose tag-list contains (at least 1 tag containing \"gan\") AND (at least 1 tag containing \"tim\")</li> </ul> </li> </ul>"},{"location":"features/#preprint-matching","title":"Preprint matching","text":"<p>There currently exists, to my knowledge, no centralized source for matching a preprint to its subsequent published article. This makes it really hard to try and implement best practices in terms of citing published papers rather than their preprint.</p> <p>My approach with PaperMemory is to try and notify you that a publication likely exists by utilizing the <code>note</code> field. You will occasionally notice <code>Accepted @ X</code> in a Paper's notes. This will be added automatically if you are on a known published venue's website (as Nature, PMLR or NeurIPS) but also from PapersWithCode, DBLP.org SemanticScholar.org, CrossRef.org and Unpaywall.org.</p> How it works <p>Here's an overview of jhow PaprMemory deals with publication APIs:</p> <ul> <li> <p>PapersWithCode.com</p> <ul> <li>A query is sent to their api from an Arxiv ID or a paper's plain text title if it's not an Arxiv paper</li> <li>As PaperMemory retrieves code, it also looks for a <code>proceeding</code> field in PWC's response.</li> <li>If it exists and is not <code>null</code> then it is expected to look like <code>${conf}-${year}-${month}</code>.</li> <li>In this case a note is added to the paper: <code>Accepted @ ${conf} ${year} -- [paperswithcode.com]</code></li> </ul> </li> <li> <p>dblp.org</p> <ul> <li>A query is sent to their api for an exact paper title match</li> <li>The oldest <code>hit</code> in the response which is not a preprint (<code>hit.venue !== \"CoRR\"</code>) is used</li> <li> <p>If such a match is found, a note is added as: <code>Accepted @ ${venue} ${year} -- [dblp.org]</code></p> <ul> <li>In this case, the original Arxiv bibtex data is overwritten to use DBLP's</li> <li>Try for instance Domain-Adversarial Training of Neural Networks</li> <li>Note that DBLP journals may use ISO4 abbreviations</li> </ul> </li> </ul> </li> <li> <p>SemanticScholar.org</p> <ul> <li>A query is sent to their api for an exact paper title match</li> <li>Up to 50 relevant papers are returned in <code>response.data</code> as an <code>Array</code></li> <li>In case of a match, the venue should not be <code>\"ArXiv\"</code></li> <li>If there's a match and its venue is not Arxiv then <code>match.venue</code> and <code>match.year</code> are used to create a note: <code>Accepted @ {venue} ({year}) -- [semanticscholar.org]</code></li> </ul> </li> <li> <p>CrossRef.org</p> <ul> <li>A query is sent to their api for an exact paper title match</li> <li>The response must contain an <code>event</code> field with a <code>name</code> attribute. If it does not it'll be ignored.</li> <li> <p>If it does, a note is added as: <code>Accepted @ ${items.event.name} -- [crossref.org]</code></p> <ul> <li>Try for instance Attention-Guided Generative Adversarial Networks for Unsupervised Image-to-Image Translation</li> </ul> </li> </ul> </li> <li> <p>Unpaywall.org</p> <ul> <li>A query is sent to their api searching for papers</li> <li>Amongst <code>response.results</code>, we're looking for an exact title match.</li> <li>If there's one, a to the paper note is added as: <code>Accepted @ ${result.journal_name} -- [unpaywall.org]</code></li> </ul> </li> </ul> <p>There's room for improvement here^, please contact me (an issue will do) if you want to help</p>"},{"location":"features/#parsing-arbitrary-websites","title":"Parsing arbitrary websites","text":"<p>PaperMemory allows you to parse any website, such as blog posts, PDFs hosted on personal websites, documentations etc.</p> <p>Just hit the <code>Parse Current Website</code> button and adjust the automatically-filled fields.</p> <p>A website will be exported as a BibTex entry like:</p> <pre><code>@misc{wolfe2023history,\n  author = {Cameron Wolfe},\n  title  = {The History of Open-Source LLMs: Early Days (Part One)},\n  year   = {2023},\n  url    = {https://cameronrwolfe.substack.com/p/the-history-of-open-source-llms-early},\n  note   = {Accessed 2023-11-20},\n}\n</code></pre> <p></p>"},{"location":"features/#bibliography-tools","title":"Bibliography tools","text":"<ul> <li>Copy the BibTex entry of the current paper from the Popup or any paper in your Memory by clicking the   icon</li> <li>Export all papers with a given tag into a <code>.bib</code> file in the Advanced Options.</li> <li>Match the ArXiv pre-prints of an existing <code>.bib</code> file to actual publications with PaperMemory's BibMatcher</li> </ul>"},{"location":"features/#local-file-storage","title":"Local File Storage","text":"<p>PaperMemory can store pdfs in your Downloads folder and use this file instead of re-downloading a pdf from the internet.</p> <p>How it works:</p> <ul> <li>Enable the feature from the  Popup Menu</li> <li>Click on the   Download button in the PaperMemory popup when reading a paper</li> <li>The extension creates a <code>PaperMemoryStore/</code> folder in your <code>Downloads/</code></li> <li>PDFs are stored in there</li> <li>When opening a paper from your Memory, if it is not already open in a tab, the extension will open a new tab (or your PDF reader, the Browser decides) to the local file instead of the paper's online pdf</li> </ul> <p>Limitations:</p> <ul> <li>PaperMemory can only access folders in your Downloads so the storage has to happen there</li> <li>It relies on title matching to 1/ Open a local file from the Memory 2/ Detect if a currently open file is a known paper to display the Popup. Make sure to have the title in your custom title function.</li> <li>If you move files or rename them altering the titles they may not be detected anymore (1).</li> </ul> <ol> <li>PaperMemory primarily relies on <code>file.finalUrl</code> to detect if a file corresponds to a known paper. If, for some reason this were to fail, the secondary matching strategy relies on said file name / paper title string matching.</li> </ol>"},{"location":"features/#online-synchronization","title":"Online Synchronization","text":"<p>Your data can be synced online to be safe-guarded or shared across devices using Github Gists.</p> <p>This means your data gets written as a commit to a Gist on your Github account, and Papers added to your memory will be saved there. You can use this to sync your full memory across devices.</p> <p>This feature can be enabled in the Advanced Options.</p> <p></p> <p>Warning</p> <p>Syncing is meant for sequential use across multiple devices.</p> <p>Syncing does NOT turn PaperMemory into a multi-user tool: in its current state, PaperMemory will NOT handle conflicts or concurrent writes to the remote data. Any conflict will result in potential loss of data.</p>"},{"location":"features/#privacy","title":"Privacy","text":"<p>None of your data ever leaves your computer, except when you enable Gist Synchronization.</p> <p>In this case, you voluntarily upload your data to Github Gists. Remember, although private Gists are non-discoverable, they are accessible to anyone with the link. So don't store personal or sensitive information in your paper notes if you enable Gists Synchronization.</p>"},{"location":"features/#feature-requests","title":"Feature requests","text":"<p>I'm regularly adding feature ideas in the issues. Feel free to go upvote the ones you'd like to see happen or submit your own requests.</p>"},{"location":"getting-started/","title":"Getting Started","text":""},{"location":"getting-started/#installation","title":"Installation","text":""},{"location":"getting-started/#browser-stores","title":"Browser Stores","text":"<p>  Chrome /  Brave /  Edge </p> <p></p> <p>  Firefox </p> <p></p> <p></p>"},{"location":"getting-started/#from-source","title":"From source","text":"Chrome / Brave / EdgeFirefox <ul> <li>Clone the repo</li> <li>Go to Chrome/Brave's extension manager <code>chrome://extensions/</code></li> <li>Enable developer mode (top right)</li> <li>Click on the \"Load unpackaged extension\" button</li> <li>Select the downloaded folder</li> </ul> <ul> <li>Clone the repo</li> <li>Go to <code>about:debugging#/runtime/this-firefox</code> in the address bar</li> <li>Click on \"Load Temporary Add-on\"</li> <li>Select the <code>manifest.json</code> file in the <code>PaperMemory/</code> folder</li> <li>NB this is a temporary install you may have to re-do this loading operation if you close Firefox</li> </ul> <p>Tip</p> <p>For better usability, I recommend that you pin the PaperMemory extension to your browser's toolbar.</p>"},{"location":"getting-started/#main-components","title":"Main components","text":""},{"location":"getting-started/#popup","title":"Popup","text":"<p>Your main interface to PaperMemory is its popup. You can open it by clicking on the PaperMemory extension icon or using the default keyboard shortcut:</p> <ul> <li>Cmd+Shift+E ()</li> <li>Ctrl+Shift+E ()</li> <li>Ctrl+Shift+M ()</li> </ul> <p>User Guide</p> <p>The <code>User Guide</code> also contains a recap of keyboard shortcuts and search syntax.</p> <p>Keyboard Shortcuts</p> <p>You can customize keyboard shortcuts (or verify that they work), see Configuration</p> <p></p>"},{"location":"getting-started/#popup-menu","title":"Popup Menu","text":"<p>By clicking on the popup bottom-right  symbol, you can open the customization menu.</p> <p>The detail list of available customization options can be found in Configuration.</p> <p></p>"},{"location":"getting-started/#memory","title":"Memory","text":"<p>Open your Memory (i.e. the list of your papers) by clicking on the popup bottom-left  button.</p> <p>In the search bar, you can search by title or author, prefix by <code>t:</code> to search for tags or by <code>y:</code> to search by year. More information in Searching for papers.</p> <p>You can also</p> <ul> <li>  Mark a paper as Favourite</li> <li>  Edit the paper's tags, code link and note</li> <li>  open a downloaded PDF</li> <li>  Go to the paper's online page (1)</li> <li> Copy the link to the paper (2)</li> <li>  Copy a formatted hyperlink (to share papers in emails, Google Docs or Slack for instance)</li> <li> Copy a <code>[$title]($url)</code> Markdown-formatted link (3)</li> <li>  Copy a BibTex entry for your <code>.bib</code> bibliography.</li> </ul> <ol> <li>This will lead you to the paper's PDF or Abstract, depending on your settings in the  Popup Menu.</li> <li>This will copy the paper's PDF or Abstract, depending on your settings in the  Popup Menu.</li> <li>The URL used will be the paper's PDF or Abstract, depending on your settings in the  Popup Menu.</li> </ol> <p></p>"},{"location":"getting-started/#paper-page","title":"Paper page","text":"<p>When on a known article's page, PaperMemory will display its meta-data (title, authors, code link), similar actions as in the memory ( ,  ,  , ,  , ,  ) and customization options.</p> <p></p>"},{"location":"getting-started/#bibmatcher","title":"BibMatcher","text":"<p>Update your <code>.bib</code> file with actual published references.</p> <p>At the bottom of the  Popup Menu, click on the PaperMemory BibMatcher link to open a tool that allows you to seamlessly match Arxiv references in your <code>.bib</code> file to actual publications, using the PaperMemory's preprint matching feature.</p> <p></p>"},{"location":"getting-started/#advanced-options","title":"Advanced Options","text":"<p>More customization options and features are available in the advanced options page:</p> <ul> <li>Right click on the extension's button in your browser toolbar and select Options</li> <li>Open the  Popup Menu, scroll down and click on Options page.</li> </ul> <p>More details in Configuration.</p> <p></p>"}]}